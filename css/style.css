/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

* {
  margin: 0px;
  padding: 0px;
  box-sizing: border-box;
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  color: #777;
  padding: 30px;
}

.header {
  height: 95vh;
  background-image: linear-gradient(
      to right bottom,
      rgba(126, 213, 111, 0.8),
      rgba(40, 180, 133, 0.8)
    ),
    url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  position: relative;
}

/* header = parent element
position: relative
reference point (origin) for logo-box positioning*/
.logo-box {
  position: absolute;
  top: 40px;
  left: 40px;
}

.logo {
  height: 35px;
  /*width automatically set since we set height*/
}

/* top, bot % is in relation to their parent element 
transform, translate is in relation to the element itself, ensures element will be in the center*/
.text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);

  /* 
  for the "Discover our tours" button centering
  */
  text-align: center;
}
.heading-primary {
  color: #fff;
  text-transform: uppercase;

  /* prevents our heading animation from slightly jiggling/shaking upward animation
  
  strange, devs don't know why this is the fix*/
  backface-visibility: hidden;

  /* for "Discover" button*/
  margin-bottom: 60px;
}

/* display the heading text both
as block level elements 
reasons:
-occupy entire width they are given
-creates line breaks after and before then

span element by default is inline element (like text)*/
.heading-primary-main {
  display: block;
  font-size: 60px;
  font-weight: 500;
  letter-spacing: 35px;

  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;
  /*
    animation-delay: 3s;
    animation-timing-function: ease-out;
    animation-iteration-count: 3;
  */
}

.heading-primary-sub {
  display: block;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 17.4px;

  animation: moveInRight 1s ease-out;
}

/* css animations
1. transition method
2. keyframes

for browser performance, it's best to only ever animate two different properties
our two: opacity, transform property
*/

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-100px);
    /*rotate(0deg);*/
  }

  60% {
    /*transform: rotate(-50deg);*/
  }

  80% {
    transform: translateX(10px);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(100px);
  }

  80% {
    transform: translateX(-10px);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInButton {
  0% {
    opacity: 0;
    transform: translateY(30px);
  }

  100% {
    opacity: 1;
    transform: translateY(0);
  }
}
/* 
top right bottom left
*/

/* 
 pseudo class link
*/
/* always put the transition property in the initial state*/
.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 15px 40px;
  display: inline-block;
  border-radius: 100px;
  transition: all 0.2s;
  position: relative;
}

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}

.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
}

.btn-white {
  background-color: #fff;
  color: #777777;
}

.btn::after {
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 100px;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.4s;
}

.btn-white::after {
  background-color: #fff;
}

/* transitioning something and then 
going to opacity:0 at post state 
is how we make FADE EFFECT*/
.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}

/* .75s animation delay */
.btn-animated {
  animation: moveInButton 0.5s ease-out 0.75s;
  animation-fill-mode: backwards;
}
